#include <iostream>
#include <queue>
#include <stack>
using namespace std;

bool checkSorted(queue<int> q) {
    stack<int> s;
    int expected = 1;
    int n = q.size();

    while (!q.empty()) {
        int front = q.front();
        q.pop();

        if (front == expected) {
            expected++;
        }
        else {
            // pop from stack if top matches expected
            while (!s.empty() && s.top() == expected) {
                s.pop();
                expected++;
            }
            // if still doesn't fit, push to stack
            if (front < expected) {
                return false;  // cannot arrange
            }
            s.push(front);
        }
    }

    // check stack at the end
    while (!s.empty() && s.top() == expected) {
        s.pop();
        expected++;
    }

    return (expected - 1 == n);
}

int main() {
    queue<int> q;
    q.push(5);
    q.push(1);
    q.push(2);
    q.push(3);
    q.push(4);

    if (checkSorted(q))
        cout << "Yes" << endl;
    else
        cout << "No" << endl;

    return 0;
}
